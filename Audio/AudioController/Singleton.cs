using System;
using UnityEngine;

/**
 * Usage: public class YourSingletonController : Singleton<YourSingletonController>
 */
public abstract class Singleton<T> : MonoBehaviour where T : MonoBehaviour
{
    private static T _instance;

    public static T Instance
    {
        get
        {
            if (_instance == null)
            {
                _instance = FindObjectOfType<T>();
                if (_instance == null)
                {
                    _instance = new GameObject(typeof(T).Name + " (Autogenerated)").AddComponent<T>();
                }
            }

            return _instance;
        }
    }

    private void Awake()
    {
        if (!ThisIsTheSingletonInstance())
        {
            return;
        }
        
        // ** Your child class's Awake code would be placed below in your class**
    }

    /**
     * @return true if the current instance is the singleton instance. false if there is already another singleton and
     * the current instance will be destroyed. 
     */
    protected bool ThisIsTheSingletonInstance(bool dontDestroyOnLoad = false)
    {
        if (_instance != null && _instance != this)
        {
            if (dontDestroyOnLoad)
            {
                Destroy(gameObject);
            }
            else
            {
                Destroy(this);
            }
            return false;
        }

        if (dontDestroyOnLoad)
        {
            DontDestroyOnLoad(this);
        }

        return true;
    }
}